@model MovieTheatre.Models.Movie

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dd>
            <img src=@Html.DisplayFor(model => model.Poster) height="250px" width="250px">
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Year)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Year)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Director)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Director)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.Trailer)
        </dt>

        <dd>
            <iframe id="existing-iframe-example"
                    width="640" height="360"
                    src=@Html.DisplayFor(model => model.Trailer)
                    frameborder="0"
                    style="border: solid 4px #37474F"></iframe>

            <script type="text/javascript">
                var tag = document.createElement('script');
                tag.id = 'iframe-demo';
                tag.src = 'https://www.youtube.com/iframe_api';
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                var player;
                function onYouTubeIframeAPIReady() {
                    player = new YT.Player('existing-iframe-example', {
                        events: {
                            'onReady': onPlayerReady,
                            'onStateChange': onPlayerStateChange
                        }
                    });
                }
                function onPlayerReady(event) {
                    document.getElementById('existing-iframe-example').style.borderColor = '#FF6D00';
                }
                function changeBorderColor(playerStatus) {
                    var color;
                    if (playerStatus == -1) {
                        color = "#37474F"; // unstarted = gray
                    } else if (playerStatus == 0) {
                        color = "#FFFF00"; // ended = yellow
                    } else if (playerStatus == 1) {
                        color = "#33691E"; // playing = green
                    } else if (playerStatus == 2) {
                        color = "#DD2C00"; // paused = red
                    } else if (playerStatus == 3) {
                        color = "#AA00FF"; // buffering = purple
                    } else if (playerStatus == 5) {
                        color = "#FF6DOO"; // video cued = orange
                    }
                    if (color) {
                        document.getElementById('existing-iframe-example').style.borderColor = color;
                    }
                }
                function onPlayerStateChange(event) {
                    changeBorderColor(event.data);
                }
            </script>
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
