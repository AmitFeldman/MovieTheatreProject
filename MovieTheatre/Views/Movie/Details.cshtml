@model MovieTheatre.Controllers.MovieController.MovieDetailsModel

@section styles {
    <link href="@Url.Content("~/Styles/MovieDetails.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = Model.movie.Name;
    var isCurrentUserManager = (Boolean)Session["isCurrentUserManager"];
}

<header>
    <h2 class="header-text">
        @ViewBag.Title
        <small>(@Model.movie.Year)</small>
        <aside class="pull-right">
            <div class="fb-share-button"
                 data-href=@Html.DisplayFor(modelItem => @Model.movie.Poster)
                 data-layout="button"
                 data-size="large">
            </div>
        </aside>
    </h2>
</header>

<hr />

<content class="container">
    <div class="row">
        <div class="col-sm-4">
            <img class="img-rounded movie-image" src=@Model.movie.Poster>
        </div>

        <div class="col-sm-8">
            @if(Model.movie.Trailer != null){
                <div id="trailer">
                    <iframe id="existing-iframe-example"
                            width="640" height="360"
                            src=@Model.movie.Trailer
                            frameborder="0"
                            style="border: solid 4px #37474F"></iframe>

                    <script type="text/javascript">
                        var tag = document.createElement('script');
                        tag.id = 'iframe-demo';
                        tag.src = 'https://www.youtube.com/iframe_api';
                        var firstScriptTag = document.getElementsByTagName('script')[0];
                        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                        var player;
                        function onYouTubeIframeAPIReady() {
                            player = new YT.Player('existing-iframe-example', {
                                events: {
                                    'onReady': onPlayerReady,
                                    'onStateChange': onPlayerStateChange
                                }
                            });
                        }
                        function onPlayerReady(event) {
                            document.getElementById('existing-iframe-example').style.borderColor = '#FF6D00';
                        }
                        function changeBorderColor(playerStatus) {
                            var color;
                            if (playerStatus == -1) {
                                color = "#37474F"; // unstarted = gray
                            } else if (playerStatus == 0) {
                                color = "#FFFF00"; // ended = yellow
                            } else if (playerStatus == 1) {
                                color = "#33691E"; // playing = green
                            } else if (playerStatus == 2) {
                                color = "#DD2C00"; // paused = red
                            } else if (playerStatus == 3) {
                                color = "#AA00FF"; // buffering = purple
                            } else if (playerStatus == 5) {
                                color = "#FF6DOO"; // video cued = orange
                            }
                            if (color) {
                                document.getElementById('existing-iframe-example').style.borderColor = color;
                            }
                        }
                        function onPlayerStateChange(event) {
                            changeBorderColor(event.data);
                        }
                    </script>
                </div>
            }

            <div class="row">
                <div class="col-sm-1">
                    <span class="bold-text">Director</span>
                </div>
                <div class="col-sm-11">
                    <span>@Model.movie.Director</span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-1">
                    <span class="bold-text">Genre</span>
                </div>
                <div class="col-sm-11">
                    <span>@Model.movie.Genre</span>
                </div>
            </div>

            <br />

            <p>@Model.movie.Description</p>
        </div>
    </div>

    <br />

    <a class="btn btn-primary btn-lg" href="/Rating/Create/@Model.movie.ID">Write a Review</a>

    <hr />

    @if (Model.movieReviews.Count > 0)
    {
        <section>
            <h3>Reviews</h3>

            @foreach (var review in Model.movieReviews)
            {
                <hr />

                <a href="/User/Details/@review.UserID">
                    <h4>
                        @review.User.Username -
                        <small class="@Html.Raw((review.Stars == 5) ? "avg-movie" : (review.Stars > 5) ? "good-movie" : "bad-movie")">
                            @review.Stars / 10
                        </small>
                    </h4>
                </a>
                <h5 class="review-text">@review.Review</h5>
                <h6>@review.ReviewDate.Day/@review.ReviewDate.Month/@review.ReviewDate.Year</h6>
            }
        </section>
    }

    <hr />
</content>

@if (isCurrentUserManager == true)
{
    <p>
        @Html.ActionLink("Edit Movie", "Edit", new { id = Model.movie.ID }) |
        @Html.ActionLink("Delete Movie", "Delete", new { id = Model.movie.ID })
    </p>
}
