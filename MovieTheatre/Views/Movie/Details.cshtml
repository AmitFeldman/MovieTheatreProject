@model MovieTheatre.Models.Movie

@section styles {
    <link href="@Url.Content("~/Styles/MovieDetails.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = Model.Name;
}

<header>
    <h2>
        @ViewBag.Title
        <small>(@Model.Year)</small>
        <aside class="pull-right">
            <div class="fb-share-button"
                 data-href=@Html.DisplayFor(modelItem => @Model.Poster)
                 data-layout="button"
                 data-size="large">
            </div>
        </aside>
    </h2>
</header>

<hr />

<content class="container">
    <div class="row">
        <div class="col-sm-4">
            <img class="img-rounded movie-image" src=@Model.Poster>
        </div>

        <div class="col-sm-8">
            <div id="trailer">
                <iframe id="existing-iframe-example"
                        width="640" height="360"
                        src=@Model.Trailer
                        frameborder="0"
                        style="border: solid 4px #37474F"></iframe>

                <script type="text/javascript">
                    var tag = document.createElement('script');
                    tag.id = 'iframe-demo';
                    tag.src = 'https://www.youtube.com/iframe_api';
                    var firstScriptTag = document.getElementsByTagName('script')[0];
                    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                    var player;
                    function onYouTubeIframeAPIReady() {
                        player = new YT.Player('existing-iframe-example', {
                            events: {
                                'onReady': onPlayerReady,
                                'onStateChange': onPlayerStateChange
                            }
                        });
                    }
                    function onPlayerReady(event) {
                        document.getElementById('existing-iframe-example').style.borderColor = '#FF6D00';
                    }
                    function changeBorderColor(playerStatus) {
                        var color;
                        if (playerStatus == -1) {
                            color = "#37474F"; // unstarted = gray
                        } else if (playerStatus == 0) {
                            color = "#FFFF00"; // ended = yellow
                        } else if (playerStatus == 1) {
                            color = "#33691E"; // playing = green
                        } else if (playerStatus == 2) {
                            color = "#DD2C00"; // paused = red
                        } else if (playerStatus == 3) {
                            color = "#AA00FF"; // buffering = purple
                        } else if (playerStatus == 5) {
                            color = "#FF6DOO"; // video cued = orange
                        }
                        if (color) {
                            document.getElementById('existing-iframe-example').style.borderColor = color;
                        }
                    }
                    function onPlayerStateChange(event) {
                        changeBorderColor(event.data);
                    }
                </script>
            </div>

            <div class="row">
                <div class="col-sm-1">
                    <span class="bold-text">Director</span>
                </div>
                <div class="col-sm-11">
                    <span>@Model.Director</span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-1">
                    <span class="bold-text">Genre</span>
                </div>
                <div class="col-sm-11">
                    <span>@Model.Genre</span>
                </div>
            </div>

            <br />

            <p>@Model.Description</p>
        </div>
    </div>

    <hr />

    <div>
        <h2>Reviews</h2>
    </div>

    <hr />
</content>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
