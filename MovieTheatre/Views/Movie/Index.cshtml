@model IEnumerable<MovieTheatre.Models.Movie>

@{
    ViewBag.Title = "Movies";
    Boolean isCurrentUserManager = MovieTheatre.Util.SessionManager.isCurrentUserManager(Session);
}

<h2 class="header-text">@ViewBag.Title</h2>

@if (isCurrentUserManager)
{
    <p>
        @Html.ActionLink("Add Movie", "Create")
    </p>
}

<form asp-controller="Movie" asp-action="Index">
    <div class="input-group">
        <label class="input-group-addon">Name</label>
        <input type="text" name="movieName" class="form-control">

        <label class="input-group-addon">Year</label>
        <input type="text" name="year" class="form-control">

        <label class="input-group-addon">Director</label>
        <input type="text" name="director" class="form-control">

        <label class="input-group-addon">Genre</label>
        <input type="text" name="genre" class="form-control">

        <div class="input-group-btn">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>

<content class="row">
    @foreach (var movie in Model)
    {
        <div class="col-sm-4">
            <a href="/Movie/Details/@movie.ID">
                <img class="review-img" src="@movie.Poster" style="width: 90%; margin: 5%; height: 465px" />
            </a>
        </div>
    }
</content>

<hr />

<div>
    <div id="ratings-chart" style="height: 370px; width: 100%;"></div>
    <div class="row">
        <div id="genre-chart" class="element1 col-md-5"></div>
        <div id="director-chart" class="element2 col-md-7"></div>
    </div>

    <script type="text/javascript">
        $(document).ready(() => {
            getAjaxData('GetGenreData', (response) =>
                drawChart(response, 'Genre', 'genre-chart'));
            getAjaxData('GetDirectorData', (response) =>
                drawChart(response, 'Director', 'director-chart'));
        });

        function getAjaxData(functionName, callback) {
            $.ajax({
                type: 'POST',
                dataType: 'JSON',
                url: '/Movie/' + functionName,
                success: (response) => {
                    callback(response);
                }
            })
        }

        // Draw the chart and set the chart values
        function drawChart(chartData, name, elementId) {
            google.charts.setOnLoadCallback(() => {
                var displayName = name + 's';
                var data = google.visualization.arrayToDataTable([
                    [name, 'Movies'], ...chartData.map(({ label, amount }) => [label, amount])
                ]);

                // Optional; add a title and set the width and height of the chart
                var options = { 'title': name + 's', 'width': 550, 'height': 400 };

                // Display the chart inside the <div> element with id="Directors"
                var chart = new google.visualization.PieChart(document.getElementById(elementId));
                chart.draw(data, options);
            })
        }
    </script>

    <script>
        window.onload = function () {
            var chart = new CanvasJS.Chart("ratings-chart", {
                animationEnabled: true,
                theme: "light2",
                title: {
                    text: "Movie Ratings"
                },
                axisY: {
                    includeZero: false
                },
                data: [{
                    type: "line",
                    dataPoints:
                    @Html.Raw(Json.Encode(@ViewBag.movieRating))
                }]
            });
            chart.render();
        }
    </script>

</div>
