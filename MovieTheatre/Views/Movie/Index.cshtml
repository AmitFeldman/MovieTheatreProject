@model IEnumerable<MovieTheatre.Models.Movie>

@{
    ViewBag.Title = "Manager Page";
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_EN/sdk.js#xfbml=1&version=v3.3"></script>

<script src="//cdnjs.cloudflare.com/ajax/libs/d3/4.7.2/d3.min.js"></script>
<script src="Scripts/d3pie.min.js"></script>

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Year)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Director)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Poster)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Director)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src=@Html.DisplayFor(modelItem => item.Poster) height="250px" width="250px">
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                <!-- Your share button code -->
                <div class="fb-share-button"
                     data-href=@Html.DisplayFor(modelItem => item.Poster)
                     data-layout="button"
                     data-size="large">
                </div>
            </td>
        </tr>
    }
</table>

<div>
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
    <div class="row">
        <div id="Genres" class="element1 col-md-5"></div>
        <div id="Directors" class="element2 col-md-7"></div>
    </div>
    <script type="text/javascript">
        // Load google charts
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);
        google.charts.setOnLoadCallback(drawDirectorsChart);

        // Draw the chart and set the chart values
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Genre', 'Movies'],
                ['Children', 20],
                ['Action', 10],
                ['Drama', 5],
                ['Comedy', 4],
                ["Romantic", 3],
                ['Horror', 2]
            ]);

            // Optional; add a title and set the width and height of the chart
            var options = { 'title': 'Movies Genres', 'width': 550, 'height': 400 };

            // Display the chart inside the <div> element with id="Genres"
            var chart = new google.visualization.PieChart(document.getElementById('Genres'));
            chart.draw(data, options);
        }
        // Draw the chart and set the chart values
        function drawDirectorsChart() {
            var data = google.visualization.arrayToDataTable([
                ['Genre', 'Movies'],
                ['Jameson Cameron', 20],
                ['Alfred Hitchcock', 10],
                ['Steven Spielberg', 5],
                ['Christopher Nolan', 4],
                ["Quentin Tarantino", 3],
                ['Charles Chaplin', 2]
            ]);

            // Optional; add a title and set the width and height of the chart
            var options = { 'title': 'Movies of Directors', 'width': 550, 'height': 400 };

            // Display the chart inside the <div> element with id="Directors"
            var chart = new google.visualization.PieChart(document.getElementById('Directors'));
            chart.draw(data, options);
        }

    </script>
    <script>
        window.onload = function () {

            var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,
                theme: "light2",
                title: {
                    text: "Highest rated movies"
                },
                axisY: {
                    includeZero: false
                },
                data: [{
                    type: "line",
                    dataPoints: [
                        { y: 5, indexLabel: "Finding Nemo", markerColor: "red", markerType: "triangle" },
                        { y: 4.14, indexLabel: "Harry Potter" },
                        { y: 3.2, indexLabel: "Terminator" },
                        { y: 3.1, indexLabel: "Aladin" },
                        { y: 2.99, indexLabel: "Jumangi" },
                        { y: 2, indexLabel: "Holmes and Watson", markerColor: "DarkSlateGrey", markerType: "cross" }
                    ]
                }]
            });
            chart.render();
        }
    </script>
    <div id="pieChart"></div>

    <script>
        var pie = new d3pie("pieChart", {
            "header": { "title": { "text": "Genres", "fontSize": 22, "font": "verdana" }, "subtitle": { "text": "The number of  movies from every genre", "color": "#999999", "fontSize": 10, "font": "verdana" }, "titleSubtitlePadding": 12 }, "footer": { "text": ".", "color": "#999999", "fontSize": 11, "font": "open sans", "location": "bottom-center" }, "size": { "canvasHeight": 400, "canvasWidth": 590, "pieOuterRadius": "88%" },
            "data": {
                "content":
                @Html.Raw(Json.Encode(@ViewBag.genres))
                   },
            "labels": { "outer": { "pieDistance": 32 }, "inner": { "format": "value" }, "mainLabel": { "font": "verdana" }, "percentage": { "color": "#e1e1e1", "font": "verdana", "decimalPlaces": 0 }, "value": { "color": "#e1e1e1", "font": "verdana" }, "lines": { "enabled": true, "color": "#cccccc" }, "truncation": { "enabled": true } }, "effects": { "pullOutSegmentOnClick": { "effect": "linear", "speed": 400, "size": 8 } }
        });
    </script>


</div>
